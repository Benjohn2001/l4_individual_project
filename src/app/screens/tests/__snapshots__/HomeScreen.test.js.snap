// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Check HomeScreen loading correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "flexBasis": "0%",
        "flexGrow": 1,
        "flexShrink": 1,
      },
      Object {
        "backgroundColor": "#C6C4FF",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
        },
        Object {
          "justifyContent": "space-between",
        },
        Object {
          "paddingTop": 56,
        },
        Object {
          "marginLeft": 40,
          "marginRight": 40,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontWeight": "700",
          },
          Object {
            "fontSize": 30,
            "lineHeight": 36,
          },
        ]
      }
    >
      My Groups
    </Text>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
        ]
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="pressableIcon"
      >
        <Text />
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexBasis": "0%",
          "flexGrow": 1,
          "flexShrink": 1,
        },
        Object {
          "justifyContent": "center",
        },
        Object {
          "alignItems": "center",
        },
        Object {
          "paddingTop": 40,
        },
      ]
    }
  >
    <View>
      <View
        style={
          Array [
            Object {
              "justifyContent": "center",
            },
            Object {
              "alignItems": "center",
            },
            Object {
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ]
        }
      >
        <ActivityIndicator
          color="#6B4EFF"
          size="large"
        />
        <Text
          style={
            Array [
              Object {
                "textAlign": "center",
              },
            ]
          }
        >
          Loading Groups
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
        },
        Object {
          "paddingBottom": 12,
          "paddingTop": 12,
        },
      ]
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#6B4EFF",
          "borderBottomLeftRadius": 9999,
          "borderBottomRightRadius": 9999,
          "borderTopLeftRadius": 9999,
          "borderTopRightRadius": 9999,
          "height": 48,
          "marginLeft": 6,
          "marginRight": 6,
          "opacity": 1,
          "paddingTop": 12,
          "width": "83.333333%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#fff",
            },
            Object {
              "textAlign": "center",
            },
          ]
        }
      >
        Add a Group
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  />
</RCTSafeAreaView>
`;

exports[`Check HomeScreen search page correctly 1`] = `ShallowWrapper {}`;
